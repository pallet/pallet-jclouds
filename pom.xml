<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.cloudhoist</groupId>
    <artifactId>parent-pom</artifactId>
    <version>0.1.3</version>
  </parent>
  <groupId>org.cloudhoist</groupId>
  <artifactId>pallet-jclouds</artifactId>
  <version>1.5.2-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Pallet jclouds Provider</name>
  <description>
    A provider for using Pallet with jclouds.

    jclouds is a library allowing uniform access to multiple clouds.

    Pallet is a platform for agile and programmatic automation of infrastructure
    in the cloud, on server racks or directly on virtual machines. Pallet
    provides cloud provider and operating system independence, and allows for an
    unprecedented level of customization.
  </description>
  <url>http://palletops.com</url>
  <inceptionYear>2010</inceptionYear>

  <scm>
    <connection>scm:git:git://github.com/pallet/pallet-jclouds.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/pallet/pallet-jclouds.git</developerConnection>
    <url>http://github.com/pallet/pallet-jclouds</url>
  </scm>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <testSourceDirectory>test</testSourceDirectory>
    <resources>
      <resource>
        <directory>src</directory>
      </resource>
      <resource>
        <directory>resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>test-resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.cloudhoist.plugin</groupId>
        <artifactId>zi</artifactId>
        <configuration>
          <marginaliaTargetDirectory>doc/source/${pallet-jclouds.doc.version}</marginaliaTargetDirectory>
          <codoxTargetDirectory>doc/api/${pallet-jclouds.doc.version}</codoxTargetDirectory>
          <codoxApiVersion>${pallet-jclouds.doc.version}</codoxApiVersion>
          <codoxWriter>codox-md.writer/write-docs</codoxWriter>
          <excludeTestNamespacesMatching>pallet.*jclouds.*-0-.*</excludeTestNamespacesMatching>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>logback-test.xml</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>clojure</artifactId>
      <version>${clojure.version}</version>
    </dependency>
    <dependency>
      <groupId>org.cloudhoist</groupId>
      <artifactId>pallet</artifactId>
      <version>${pallet.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.cloudhoist</groupId>
      <artifactId>pallet</artifactId>
      <version>${pallet.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jclouds</groupId>
      <artifactId>jclouds-compute</artifactId>
      <version>${jclouds.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jclouds</groupId>
      <artifactId>jclouds-blobstore</artifactId>
      <version>${jclouds.version}</version>
    </dependency>

    <!-- You will need the jclouds provider specific jars for your project -->
    <!-- The simplest is to pull in everything, but you can use individual -->
    <!-- provider dependencies. -->
    <dependency>
      <groupId>org.jclouds</groupId>
      <artifactId>jclouds-all</artifactId>
      <version>${jclouds.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jclouds.driver</groupId>
      <artifactId>jclouds-sshj</artifactId>
      <version>${jclouds.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jclouds.driver</groupId>
      <artifactId>jclouds-slf4j</artifactId>
      <version>${jclouds.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>live-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.cloudhoist.plugin</groupId>
            <artifactId>zi</artifactId>
            <configuration>
              <initScript>
                (System/setProperty "ssh.username" "testuser")
                (System/setProperty "pallet.test.live" "true")
                (System/setProperty
                  "pallet.test.service-name" "${pallet.test.service-name}")
                (System/setProperty
                  "pallet.test.cleanup-nodes" "${pallet.test.cleanup-nodes}")
                (System/setProperty
                  "pallet.test.image-list" "${pallet.test.image-list}")
                (System/setProperty
                  "pallet.test.parallel" "${pallet.test.parallel}")
                (System/setProperty
                  "pallet.test.session-type" "${pallet.test.session-type}")
              </initScript>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <pallet.test.service-name>live-test</pallet.test.service-name>
        <pallet.test.cleanup-nodes>true</pallet.test.cleanup-nodes>
        <pallet.test.parallel>false</pallet.test.parallel>
        <pallet.test.image-list />
        <pallet.test.session-type />
      </properties>
    </profile>
    <profile>
      <id>testuser</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.cloudhoist.plugin</groupId>
            <artifactId>zi</artifactId>
            <configuration>
              <initScript>
                (System/setProperty "ssh.username" "testuser")
              </initScript>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <properties>
    <jclouds.version>1.5.3</jclouds.version>
    <pallet.version>0.7.2</pallet.version>
    <pallet-jclouds.doc.version>1.5</pallet-jclouds.doc.version>
  </properties>

</project>
